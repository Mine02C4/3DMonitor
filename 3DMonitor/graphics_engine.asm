; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Users\naoya\Documents\Visual Studio 2010\npca.jp\3Dモニター制作\3DMonitor-分岐\3DMonitor\graphics_engine.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??0CameraParam@@QAE@MMMUD3DXVECTOR3@@@Z		; CameraParam::CameraParam
PUBLIC	__real@3f490fdb
PUBLIC	__real@44480000
PUBLIC	__real@41a00000
PUBLIC	__real@c2a00000
PUBLIC	__real@bf800000
PUBLIC	__real@3f733333
PUBLIC	__real@3f666666
PUBLIC	__real@3f800000
PUBLIC	??0D3DXVECTOR3@@QAE@MMM@Z			; D3DXVECTOR3::D3DXVECTOR3
PUBLIC	??0DirectionYPR@@QAE@MMM@Z			; DirectionYPR::DirectionYPR
PUBLIC	__real@00000000
PUBLIC	__real@bfc90fdb
PUBLIC	??_C@_1BI@GOIFEEMI@?$AAm?$AAo?$AAd?$AAe?$AAl?$AA?2?$AAp?$AAo?$AAt?$AA?4?$AAx?$AA?$AA@ ; `string'
PUBLIC	__real@3f000000
PUBLIC	??0CameraParam@@QAE@XZ				; CameraParam::CameraParam
PUBLIC	__$ArrayPad$
PUBLIC	??0GraphicsEngine@@QAE@PAVDXEngine@@PAJ@Z	; GraphicsEngine::GraphicsEngine
EXTRN	_memset:PROC
EXTRN	??0ObjectBox@@QAE@PAVModelData@@UD3DXVECTOR3@@UDirectionYPR@@@Z:PROC ; ObjectBox::ObjectBox
EXTRN	??0ModelData@@QAE@PB_WPAHMPAUIDirect3DDevice9@@@Z:PROC ; ModelData::ModelData
EXTRN	?get_d3d_device@DXEngine@@QAEPAUIDirect3DDevice9@@XZ:PROC ; DXEngine::get_d3d_device
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT __real@3f490fdb
; File c:\users\naoya\documents\visual studio 2010\npca.jp\3dモニター制作\3dmonitor-分岐\3dmonitor\graphics_engine.cpp
CONST	SEGMENT
__real@3f490fdb DD 03f490fdbr			; 0.785398
CONST	ENDS
;	COMDAT __real@44480000
CONST	SEGMENT
__real@44480000 DD 044480000r			; 800
CONST	ENDS
;	COMDAT __real@41a00000
CONST	SEGMENT
__real@41a00000 DD 041a00000r			; 20
CONST	ENDS
;	COMDAT __real@c2a00000
CONST	SEGMENT
__real@c2a00000 DD 0c2a00000r			; -80
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@3f733333
CONST	SEGMENT
__real@3f733333 DD 03f733333r			; 0.95
CONST	ENDS
;	COMDAT __real@3f666666
CONST	SEGMENT
__real@3f666666 DD 03f666666r			; 0.9
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT __real@bfc90fdb
CONST	SEGMENT
__real@bfc90fdb DD 0bfc90fdbr			; -1.5708
CONST	ENDS
;	COMDAT ??_C@_1BI@GOIFEEMI@?$AAm?$AAo?$AAd?$AAe?$AAl?$AA?2?$AAp?$AAo?$AAt?$AA?4?$AAx?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@GOIFEEMI@?$AAm?$AAo?$AAd?$AAe?$AAl?$AA?2?$AAp?$AAo?$AAt?$AA?4?$AAx?$AA?$AA@ DB 'm'
	DB	00H, 'o', 00H, 'd', 00H, 'e', 00H, 'l', 00H, '\', 00H, 'p', 00H
	DB	'o', 00H, 't', 00H, '.', 00H, 'x', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??0GraphicsEngine@@QAE@PAVDXEngine@@PAJ@Z
_TEXT	SEGMENT
tv134 = -384						; size = 4
tv80 = -384						; size = 4
$T80085 = -376						; size = 12
$T80092 = -356						; size = 12
$T80094 = -336						; size = 12
$T80095 = -316						; size = 48
$T80326 = -260						; size = 4
$T80329 = -248						; size = 4
$T80330 = -236						; size = 12
_error_flag$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_tmp_dx$ = 8						; size = 4
_result$ = 12						; size = 4
??0GraphicsEngine@@QAE@PAVDXEngine@@PAJ@Z PROC		; GraphicsEngine::GraphicsEngine, COMDAT
; _this$ = ecx
; Line 16
	push	ebp
	mov	ebp, esp
	sub	esp, 384				; 00000180H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-384]
	mov	ecx, 96					; 00000060H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??0CameraParam@@QAE@XZ			; CameraParam::CameraParam
; Line 17
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _tmp_dx$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 18
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 19
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 21
	mov	DWORD PTR _error_flag$[ebp], 0
; Line 22
	push	20					; 00000014H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T80326[ebp], eax
	cmp	DWORD PTR $T80326[ebp], 0
	je	SHORT $LN4@GraphicsEn
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?get_d3d_device@DXEngine@@QAEPAUIDirect3DDevice9@@XZ ; DXEngine::get_d3d_device
	push	eax
	push	ecx
	fld	DWORD PTR __real@3f000000
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR _error_flag$[ebp]
	push	ecx
	push	OFFSET ??_C@_1BI@GOIFEEMI@?$AAm?$AAo?$AAd?$AAe?$AAl?$AA?2?$AAp?$AAo?$AAt?$AA?4?$AAx?$AA?$AA@
	mov	ecx, DWORD PTR $T80326[ebp]
	call	??0ModelData@@QAE@PB_WPAHMPAUIDirect3DDevice9@@@Z ; ModelData::ModelData
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $LN5@GraphicsEn
$LN4@GraphicsEn:
	mov	DWORD PTR tv80[ebp], 0
$LN5@GraphicsEn:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv80[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 23
	cmp	DWORD PTR _error_flag$[ebp], 1
	jne	SHORT $LN1@GraphicsEn
; Line 24
	mov	eax, DWORD PTR _result$[ebp]
	mov	DWORD PTR [eax], -2147467259		; 80004005H
; Line 25
	jmp	$LN2@GraphicsEn
$LN1@GraphicsEn:
; Line 28
	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T80329[ebp], eax
	cmp	DWORD PTR $T80329[ebp], 0
	je	$LN6@GraphicsEn
	push	ecx
	fld	DWORD PTR __real@bfc90fdb
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T80330[ebp]
	call	??0DirectionYPR@@QAE@MMM@Z		; DirectionYPR::DirectionYPR
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T80085[ebp]
	call	??0D3DXVECTOR3@@QAE@MMM@Z		; D3DXVECTOR3::D3DXVECTOR3
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR $T80329[ebp]
	call	??0ObjectBox@@QAE@PAVModelData@@UD3DXVECTOR3@@UDirectionYPR@@@Z ; ObjectBox::ObjectBox
	mov	DWORD PTR tv134[ebp], eax
	jmp	SHORT $LN7@GraphicsEn
$LN6@GraphicsEn:
	mov	DWORD PTR tv134[ebp], 0
$LN7@GraphicsEn:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv134[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 31
	push	104					; 00000068H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 32
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 3
; Line 33
	mov	eax, DWORD PTR _this$[ebp]
	fld1
	fstp	DWORD PTR [eax+16]
; Line 34
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR __real@3f666666
	fstp	DWORD PTR [eax+20]
; Line 35
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR __real@3f733333
	fstp	DWORD PTR [eax+24]
; Line 36
	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [eax+28]
; Line 37
	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@bf800000
	fstp	DWORD PTR [esp]
	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T80092[ebp]
	call	??0D3DXVECTOR3@@QAE@MMM@Z		; D3DXVECTOR3::D3DXVECTOR3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
; Line 40
	push	ecx
	fld	DWORD PTR __real@c2a00000
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@41a00000
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T80094[ebp]
	call	??0D3DXVECTOR3@@QAE@MMM@Z		; D3DXVECTOR3::D3DXVECTOR3
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	push	ecx
	fld	DWORD PTR __real@44480000
	fstp	DWORD PTR [esp]
	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3f490fdb
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T80095[ebp]
	call	??0CameraParam@@QAE@MMMUD3DXVECTOR3@@@Z	; CameraParam::CameraParam
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 116				; 00000074H
	mov	ecx, 12					; 0000000cH
	mov	esi, eax
	rep movsd
$LN2@GraphicsEn:
; Line 41
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@GraphicsEn
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 384				; 00000180H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN10@GraphicsEn:
	DD	1
	DD	$LN9@GraphicsEn
$LN9@GraphicsEn:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN8@GraphicsEn
$LN8@GraphicsEn:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	95					; 0000005fH
	DB	102					; 00000066H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	103					; 00000067H
	DB	0
??0GraphicsEngine@@QAE@PAVDXEngine@@PAJ@Z ENDP		; GraphicsEngine::GraphicsEngine
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@MMM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
_fz$ = 16						; size = 4
??0D3DXVECTOR3@@QAE@MMM@Z PROC				; D3DXVECTOR3::D3DXVECTOR3, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft directx sdk (june 2010)\include\d3dx9math.inl
; Line 303
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 304
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _fx$[ebp]
	fstp	DWORD PTR [eax]
; Line 305
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _fy$[ebp]
	fstp	DWORD PTR [eax+4]
; Line 306
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _fz$[ebp]
	fstp	DWORD PTR [eax+8]
; Line 307
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0D3DXVECTOR3@@QAE@MMM@Z ENDP				; D3DXVECTOR3::D3DXVECTOR3
_TEXT	ENDS
PUBLIC	??0D3DXVECTOR3@@QAE@XZ				; D3DXVECTOR3::D3DXVECTOR3
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0CameraParam@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0CameraParam@@QAE@XZ PROC				; CameraParam::CameraParam, COMDAT
; _this$ = ecx
; File c:\users\naoya\documents\visual studio 2010\npca.jp\3dモニター制作\3dmonitor-分岐\3dmonitor\typedefs.h
; Line 32
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0D3DXVECTOR3@@QAE@XZ			; D3DXVECTOR3::D3DXVECTOR3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0D3DXVECTOR3@@QAE@XZ			; D3DXVECTOR3::D3DXVECTOR3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0D3DXVECTOR3@@QAE@XZ			; D3DXVECTOR3::D3DXVECTOR3
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CameraParam@@QAE@XZ ENDP				; CameraParam::CameraParam
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0D3DXVECTOR3@@QAE@XZ PROC				; D3DXVECTOR3::D3DXVECTOR3, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft directx sdk (june 2010)\include\d3dx9math.h
; Line 165
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0D3DXVECTOR3@@QAE@XZ ENDP				; D3DXVECTOR3::D3DXVECTOR3
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0CameraParam@@QAE@MMMUD3DXVECTOR3@@@Z
_TEXT	SEGMENT
$T77734 = -244						; size = 12
$T77735 = -224						; size = 12
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_c_fov$ = 8						; size = 4
_c_z_near$ = 12						; size = 4
_c_z_far$ = 16						; size = 4
_c_position$ = 20					; size = 12
??0CameraParam@@QAE@MMMUD3DXVECTOR3@@@Z PROC		; CameraParam::CameraParam, COMDAT
; _this$ = ecx
; File c:\users\naoya\documents\visual studio 2010\npca.jp\3dモニター制作\3dmonitor-分岐\3dmonitor\typedefs.h
; Line 33
	push	ebp
	mov	ebp, esp
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0D3DXVECTOR3@@QAE@XZ			; D3DXVECTOR3::D3DXVECTOR3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0D3DXVECTOR3@@QAE@XZ			; D3DXVECTOR3::D3DXVECTOR3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0D3DXVECTOR3@@QAE@XZ			; D3DXVECTOR3::D3DXVECTOR3
; Line 34
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _c_fov$[ebp]
	fstp	DWORD PTR [eax+36]
; Line 35
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _c_z_near$[ebp]
	fstp	DWORD PTR [eax+40]
; Line 36
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _c_z_far$[ebp]
	fstp	DWORD PTR [eax+44]
; Line 37
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _c_position$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _c_position$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _c_position$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
; Line 38
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T77734[ebp]
	call	??0D3DXVECTOR3@@QAE@MMM@Z		; D3DXVECTOR3::D3DXVECTOR3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
; Line 39
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T77735[ebp]
	call	??0D3DXVECTOR3@@QAE@MMM@Z		; D3DXVECTOR3::D3DXVECTOR3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
; Line 40
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
??0CameraParam@@QAE@MMMUD3DXVECTOR3@@@Z ENDP		; CameraParam::CameraParam
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0DirectionYPR@@QAE@MMM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_tYaw$ = 8						; size = 4
_tPitch$ = 12						; size = 4
_tRoll$ = 16						; size = 4
??0DirectionYPR@@QAE@MMM@Z PROC				; DirectionYPR::DirectionYPR, COMDAT
; _this$ = ecx
; File c:\users\naoya\documents\visual studio 2010\npca.jp\3dモニター制作\3dmonitor-分岐\3dmonitor\dx_engine.h
; Line 49
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 50
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _tYaw$[ebp]
	fstp	DWORD PTR [eax]
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _tPitch$[ebp]
	fstp	DWORD PTR [eax+4]
; Line 52
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _tRoll$[ebp]
	fstp	DWORD PTR [eax+8]
; Line 53
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0DirectionYPR@@QAE@MMM@Z ENDP				; DirectionYPR::DirectionYPR
_TEXT	ENDS
PUBLIC	??_GModelData@@QAEPAXI@Z			; ModelData::`scalar deleting destructor'
PUBLIC	??_GObjectBox@@QAEPAXI@Z			; ObjectBox::`scalar deleting destructor'
PUBLIC	??1GraphicsEngine@@QAE@XZ			; GraphicsEngine::~GraphicsEngine
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1GraphicsEngine@@QAE@XZ
_TEXT	SEGMENT
tv80 = -256						; size = 4
tv71 = -256						; size = 4
$T80384 = -248						; size = 4
$T80385 = -236						; size = 4
$T80388 = -224						; size = 4
$T80389 = -212						; size = 4
_this$ = -8						; size = 4
??1GraphicsEngine@@QAE@XZ PROC				; GraphicsEngine::~GraphicsEngine, COMDAT
; _this$ = ecx
; File c:\users\naoya\documents\visual studio 2010\npca.jp\3dモニター制作\3dmonitor-分岐\3dmonitor\graphics_engine.cpp
; Line 44
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN2@GraphicsEn@2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T80385[ebp], ecx
	mov	edx, DWORD PTR $T80385[ebp]
	mov	DWORD PTR $T80384[ebp], edx
	cmp	DWORD PTR $T80384[ebp], 0
	je	SHORT $LN5@GraphicsEn@2
	push	1
	mov	ecx, DWORD PTR $T80384[ebp]
	call	??_GObjectBox@@QAEPAXI@Z
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN6@GraphicsEn@2
$LN5@GraphicsEn@2:
	mov	DWORD PTR tv71[ebp], 0
$LN6@GraphicsEn@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
$LN2@GraphicsEn@2:
; Line 46
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@GraphicsEn@2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T80389[ebp], ecx
	mov	edx, DWORD PTR $T80389[ebp]
	mov	DWORD PTR $T80388[ebp], edx
	cmp	DWORD PTR $T80388[ebp], 0
	je	SHORT $LN7@GraphicsEn@2
	push	1
	mov	ecx, DWORD PTR $T80388[ebp]
	call	??_GModelData@@QAEPAXI@Z
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $LN8@GraphicsEn@2
$LN7@GraphicsEn@2:
	mov	DWORD PTR tv80[ebp], 0
$LN8@GraphicsEn@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN3@GraphicsEn@2:
; Line 47
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1GraphicsEngine@@QAE@XZ ENDP				; GraphicsEngine::~GraphicsEngine
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??1ObjectBox@@QAE@XZ:PROC			; ObjectBox::~ObjectBox
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GObjectBox@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GObjectBox@@QAEPAXI@Z PROC				; ObjectBox::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ObjectBox@@QAE@XZ			; ObjectBox::~ObjectBox
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GObjectBox@@QAEPAXI@Z ENDP				; ObjectBox::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1ModelData@@QAE@XZ:PROC			; ModelData::~ModelData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GModelData@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GModelData@@QAEPAXI@Z PROC				; ModelData::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ModelData@@QAE@XZ			; ModelData::~ModelData
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GModelData@@QAEPAXI@Z ENDP				; ModelData::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?GetCameraParamByViewId@GraphicsEngine@@AAEXPBUCameraParam@@HPAU2@@Z ; GraphicsEngine::GetCameraParamByViewId
PUBLIC	__$ArrayPad$
PUBLIC	?Render@GraphicsEngine@@AAEXXZ			; GraphicsEngine::Render
EXTRN	?frame_counter@@3JA:DWORD			; frame_counter
EXTRN	?ReleaseBufferDC@DXEngine@@QAEJPAPAUHDC__@@@Z:PROC ; DXEngine::ReleaseBufferDC
EXTRN	?RenderBuffer@WinEngine@@QAEXPAPAUHDC__@@@Z:PROC ; WinEngine::RenderBuffer
EXTRN	?win_engine@@3PAVWinEngine@@A:DWORD		; win_engine
EXTRN	?GetBufferDC@DXEngine@@QAEJPAPAUHDC__@@@Z:PROC	; DXEngine::GetBufferDC
EXTRN	?SetDefaultBuffer@DXEngine@@QAEXXZ:PROC		; DXEngine::SetDefaultBuffer
EXTRN	?Render@ObjectBox@@QAEXPAVDXEngine@@@Z:PROC	; ObjectBox::Render
EXTRN	?SetCamera@DXEngine@@QAEXUCameraParam@@@Z:PROC	; DXEngine::SetCamera
EXTRN	?SetViewTarget@DXEngine@@QAEXH@Z:PROC		; DXEngine::SetViewTarget
EXTRN	?SetRender@DXEngine@@QAEXW4RenderState@@@Z:PROC	; DXEngine::SetRender
EXTRN	?SetLight@DXEngine@@QAEXW4LightNumber@@U_D3DLIGHT9@@@Z:PROC ; DXEngine::SetLight
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Render@GraphicsEngine@@AAEXXZ
_TEXT	SEGMENT
_buffer_dc$80125 = -104					; size = 4
_i$80121 = -92						; size = 4
_tmp_camera$80120 = -80					; size = 48
_d3d_device$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?Render@GraphicsEngine@@AAEXXZ PROC			; GraphicsEngine::Render, COMDAT
; _this$ = ecx
; Line 51
	push	ebp
	mov	ebp, esp
	sub	esp, 300				; 0000012cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 75					; 0000004bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 52
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?get_d3d_device@DXEngine@@QAEPAUIDirect3DDevice9@@XZ ; DXEngine::get_d3d_device
	mov	DWORD PTR _d3d_device$[ebp], eax
; Line 53
	mov	esi, esp
	push	0
	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	-16777216				; ff000000H
	push	3
	push	0
	push	0
	mov	eax, DWORD PTR _d3d_device$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _d3d_device$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+172]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 56
	mov	eax, DWORD PTR _d3d_device$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _d3d_device$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+164]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jl	$LN6@Render
; Line 59
	mov	esi, DWORD PTR _this$[ebp]
	add	esi, 12					; 0000000cH
	sub	esp, 104				; 00000068H
	mov	ecx, 26					; 0000001aH
	mov	edi, esp
	rep movsd
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?SetLight@DXEngine@@QAEXW4LightNumber@@U_D3DLIGHT9@@@Z ; DXEngine::SetLight
; Line 63
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?SetRender@DXEngine@@QAEXW4RenderState@@@Z ; DXEngine::SetRender
; Line 68
	lea	ecx, DWORD PTR _tmp_camera$80120[ebp]
	call	??0CameraParam@@QAE@XZ			; CameraParam::CameraParam
; Line 69
	mov	DWORD PTR _i$80121[ebp], 0
	jmp	SHORT $LN5@Render
$LN4@Render:
	mov	eax, DWORD PTR _i$80121[ebp]
	add	eax, 1
	mov	DWORD PTR _i$80121[ebp], eax
$LN5@Render:
	cmp	DWORD PTR _i$80121[ebp], 36		; 00000024H
	jge	SHORT $LN3@Render
; Line 71
	mov	eax, DWORD PTR _i$80121[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?SetViewTarget@DXEngine@@QAEXH@Z	; DXEngine::SetViewTarget
; Line 72
	lea	eax, DWORD PTR _tmp_camera$80120[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$80121[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 116				; 00000074H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCameraParamByViewId@GraphicsEngine@@AAEXPBUCameraParam@@HPAU2@@Z ; GraphicsEngine::GetCameraParamByViewId
; Line 73
	sub	esp, 48					; 00000030H
	mov	ecx, 12					; 0000000cH
	lea	esi, DWORD PTR _tmp_camera$80120[ebp]
	mov	edi, esp
	rep movsd
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?SetCamera@DXEngine@@QAEXUCameraParam@@@Z ; DXEngine::SetCamera
; Line 74
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	?Render@ObjectBox@@QAEXPAVDXEngine@@@Z	; ObjectBox::Render
; Line 75
	jmp	SHORT $LN4@Render
$LN3@Render:
; Line 78
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?SetDefaultBuffer@DXEngine@@QAEXXZ	; DXEngine::SetDefaultBuffer
; Line 79
	mov	esi, DWORD PTR _this$[ebp]
	add	esi, 116				; 00000074H
	sub	esp, 48					; 00000030H
	mov	ecx, 12					; 0000000cH
	mov	edi, esp
	rep movsd
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?SetCamera@DXEngine@@QAEXUCameraParam@@@Z ; DXEngine::SetCamera
; Line 80
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	?Render@ObjectBox@@QAEXPAVDXEngine@@@Z	; ObjectBox::Render
; Line 83
	lea	eax, DWORD PTR _buffer_dc$80125[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?GetBufferDC@DXEngine@@QAEJPAPAUHDC__@@@Z ; DXEngine::GetBufferDC
; Line 85
	lea	eax, DWORD PTR _buffer_dc$80125[ebp]
	push	eax
	mov	ecx, DWORD PTR ?win_engine@@3PAVWinEngine@@A ; win_engine
	call	?RenderBuffer@WinEngine@@QAEXPAPAUHDC__@@@Z ; WinEngine::RenderBuffer
; Line 87
	lea	eax, DWORD PTR _buffer_dc$80125[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?ReleaseBufferDC@DXEngine@@QAEJPAPAUHDC__@@@Z ; DXEngine::ReleaseBufferDC
; Line 90
	mov	eax, DWORD PTR _d3d_device$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _d3d_device$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+168]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@Render:
; Line 93
	mov	eax, DWORD PTR ?frame_counter@@3JA	; frame_counter
	add	eax, 1
	mov	DWORD PTR ?frame_counter@@3JA, eax	; frame_counter
; Line 94
	cmp	DWORD PTR ?frame_counter@@3JA, 101	; frame_counter, 00000065H
	je	SHORT $LN1@Render
	cmp	DWORD PTR ?frame_counter@@3JA, 1	; frame_counter
	jne	SHORT $LN2@Render
$LN1@Render:
; Line 96
	npad	1
$LN2@Render:
; Line 102
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@Render
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN12@Render:
	DD	2
	DD	$LN11@Render
$LN11@Render:
	DD	-80					; ffffffb0H
	DD	48					; 00000030H
	DD	$LN9@Render
	DD	-104					; ffffff98H
	DD	4
	DD	$LN10@Render
$LN10@Render:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	95					; 0000005fH
	DB	100					; 00000064H
	DB	99					; 00000063H
	DB	0
$LN9@Render:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	95					; 0000005fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	0
?Render@GraphicsEngine@@AAEXXZ ENDP			; GraphicsEngine::Render
_TEXT	ENDS
PUBLIC	??YD3DXVECTOR3@@QAEAAU0@ABU0@@Z			; D3DXVECTOR3::operator+=
PUBLIC	??DD3DXVECTOR3@@QBE?AU0@M@Z			; D3DXVECTOR3::operator*
PUBLIC	?D3DXVec3Cross@@YAPAUD3DXVECTOR3@@PAU1@PBU1@1@Z	; D3DXVec3Cross
PUBLIC	?D3DXVec3Length@@YAMPBUD3DXVECTOR3@@@Z		; D3DXVec3Length
PUBLIC	??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z			; D3DXVECTOR3::operator+
PUBLIC	??D@YA?AUD3DXVECTOR3@@MABU0@@Z			; operator*
PUBLIC	??GD3DXVECTOR3@@QBE?AU0@ABU0@@Z			; D3DXVECTOR3::operator-
PUBLIC	__real@bfc955741c666667
PUBLIC	__real@3f8684d8fccccccd
PUBLIC	__real@4032800000000000
PUBLIC	__real@0000000000000000
PUBLIC	__$ArrayPad$
EXTRN	_D3DXVec3Normalize@8:PROC
EXTRN	_sin:PROC
EXTRN	_cos:PROC
;	COMDAT __real@bfc955741c666667
CONST	SEGMENT
__real@bfc955741c666667 DQ 0bfc955741c666667r	; -0.19792
CONST	ENDS
;	COMDAT __real@3f8684d8fccccccd
CONST	SEGMENT
__real@3f8684d8fccccccd DQ 03f8684d8fccccccdr	; 0.0109956
CONST	ENDS
;	COMDAT __real@4032800000000000
CONST	SEGMENT
__real@4032800000000000 DQ 04032800000000000r	; 18.5
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?GetCameraParamByViewId@GraphicsEngine@@AAEXPBUCameraParam@@HPAU2@@Z
_TEXT	SEGMENT
tv212 = -464						; size = 4
tv184 = -464						; size = 4
tv174 = -464						; size = 4
$T80134 = -456						; size = 48
$T80145 = -400						; size = 12
$T80146 = -380						; size = 12
$T80147 = -360						; size = 12
$T80149 = -340						; size = 12
$T80150 = -320						; size = 12
$T80152 = -300						; size = 12
$T80153 = -280						; size = 12
$T80154 = -260						; size = 12
_tmp_vec$80148 = -48					; size = 12
_difference_view$ = -28					; size = 8
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_main_camera$ = 8					; size = 4
_camera_id$ = 12					; size = 4
_out_camera$ = 16					; size = 4
?GetCameraParamByViewId@GraphicsEngine@@AAEXPBUCameraParam@@HPAU2@@Z PROC ; GraphicsEngine::GetCameraParamByViewId, COMDAT
; _this$ = ecx
; Line 105
	push	ebp
	mov	ebp, esp
	sub	esp, 464				; 000001d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-464]
	mov	ecx, 116				; 00000074H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 106
	mov	esi, DWORD PTR _main_camera$[ebp]
	mov	ecx, 12					; 0000000cH
	lea	edi, DWORD PTR $T80134[ebp]
	rep movsd
	mov	ecx, 12					; 0000000cH
	lea	esi, DWORD PTR $T80134[ebp]
	mov	edi, DWORD PTR _out_camera$[ebp]
	rep movsd
; Line 107
	fldz
	fstp	QWORD PTR _difference_view$[ebp]
; Line 108
	fild	DWORD PTR _camera_id$[ebp]
	fld	QWORD PTR __real@4032800000000000
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN2@GetCameraP
; Line 109
	jmp	$LN3@GetCameraP
; Line 110
	jmp	$LN1@GetCameraP
$LN2@GetCameraP:
; Line 111
	mov	eax, DWORD PTR _camera_id$[ebp]
	sub	eax, 1
	mov	DWORD PTR tv174[ebp], eax
	fild	DWORD PTR tv174[ebp]
	fmul	QWORD PTR __real@3f8684d8fccccccd
	fadd	QWORD PTR __real@bfc955741c666667
	fstp	QWORD PTR _difference_view$[ebp]
; Line 112
	mov	eax, DWORD PTR _main_camera$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR $T80145[ebp]
	push	ecx
	mov	ecx, DWORD PTR _main_camera$[ebp]
	call	??GD3DXVECTOR3@@QBE?AU0@ABU0@@Z		; D3DXVECTOR3::operator-
	push	eax
	sub	esp, 8
	fld	QWORD PTR _difference_view$[ebp]
	fstp	QWORD PTR [esp]
	call	_cos
	add	esp, 8
	fstp	DWORD PTR tv184[ebp]
	fld	DWORD PTR tv184[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	lea	edx, DWORD PTR $T80146[ebp]
	push	edx
	call	??D@YA?AUD3DXVECTOR3@@MABU0@@Z		; operator*
	add	esp, 12					; 0000000cH
	push	eax
	lea	eax, DWORD PTR $T80147[ebp]
	push	eax
	mov	ecx, DWORD PTR _main_camera$[ebp]
	add	ecx, 12					; 0000000cH
	call	??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z		; D3DXVECTOR3::operator+
	mov	ecx, DWORD PTR _out_camera$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
; Line 113
	lea	ecx, DWORD PTR _tmp_vec$80148[ebp]
	call	??0D3DXVECTOR3@@QAE@XZ			; D3DXVECTOR3::D3DXVECTOR3
; Line 114
	mov	eax, DWORD PTR _main_camera$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T80153[ebp]
	push	ecx
	mov	ecx, DWORD PTR _main_camera$[ebp]
	add	ecx, 12					; 0000000cH
	call	??GD3DXVECTOR3@@QBE?AU0@ABU0@@Z		; D3DXVECTOR3::operator-
	push	eax
	call	?D3DXVec3Length@@YAMPBUD3DXVECTOR3@@@Z	; D3DXVec3Length
	fstp	DWORD PTR [esp]
	lea	edx, DWORD PTR $T80154[ebp]
	push	edx
	sub	esp, 8
	fld	QWORD PTR _difference_view$[ebp]
	fstp	QWORD PTR [esp]
	call	_sin
	add	esp, 8
	fstp	DWORD PTR tv212[ebp]
	fld	DWORD PTR tv212[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	lea	eax, DWORD PTR $T80152[ebp]
	push	eax
	mov	ecx, DWORD PTR _main_camera$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T80150[ebp]
	push	edx
	mov	ecx, DWORD PTR _main_camera$[ebp]
	add	ecx, 12					; 0000000cH
	call	??GD3DXVECTOR3@@QBE?AU0@ABU0@@Z		; D3DXVECTOR3::operator-
	push	eax
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@bf800000
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T80149[ebp]
	call	??0D3DXVECTOR3@@QAE@MMM@Z		; D3DXVECTOR3::D3DXVECTOR3
	push	eax
	lea	eax, DWORD PTR _tmp_vec$80148[ebp]
	push	eax
	call	?D3DXVec3Cross@@YAPAUD3DXVECTOR3@@PAU1@PBU1@1@Z ; D3DXVec3Cross
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _tmp_vec$80148[ebp]
	push	ecx
	call	_D3DXVec3Normalize@8
	mov	ecx, eax
	call	??DD3DXVECTOR3@@QBE?AU0@M@Z		; D3DXVECTOR3::operator*
	mov	ecx, eax
	call	??DD3DXVECTOR3@@QBE?AU0@M@Z		; D3DXVECTOR3::operator*
	push	eax
	mov	ecx, DWORD PTR _out_camera$[ebp]
	call	??YD3DXVECTOR3@@QAEAAU0@ABU0@@Z		; D3DXVECTOR3::operator+=
$LN1@GetCameraP:
$LN3@GetCameraP:
; Line 116
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@GetCameraP
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 464				; 000001d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN7@GetCameraP:
	DD	1
	DD	$LN6@GetCameraP
$LN6@GetCameraP:
	DD	-48					; ffffffd0H
	DD	12					; 0000000cH
	DD	$LN5@GetCameraP
$LN5@GetCameraP:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	95					; 0000005fH
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
?GetCameraParamByViewId@GraphicsEngine@@AAEXPBUCameraParam@@HPAU2@@Z ENDP ; GraphicsEngine::GetCameraParamByViewId
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??YD3DXVECTOR3@@QAEAAU0@ABU0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_v$ = 8							; size = 4
??YD3DXVECTOR3@@QAEAAU0@ABU0@@Z PROC			; D3DXVECTOR3::operator+=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft directx sdk (june 2010)\include\d3dx9math.inl
; Line 327
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 328
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax]
	mov	ecx, DWORD PTR _v$[ebp]
	fadd	DWORD PTR [ecx]
	mov	edx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [edx]
; Line 329
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _v$[ebp]
	fadd	DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [edx+4]
; Line 330
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+8]
	mov	ecx, DWORD PTR _v$[ebp]
	fadd	DWORD PTR [ecx+8]
	mov	edx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [edx+8]
; Line 331
	mov	eax, DWORD PTR _this$[ebp]
; Line 332
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??YD3DXVECTOR3@@QAEAAU0@ABU0@@Z ENDP			; D3DXVECTOR3::operator+=
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z
_TEXT	SEGMENT
tv150 = -216						; size = 4
tv147 = -212						; size = 4
tv144 = -208						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z PROC			; D3DXVECTOR3::operator+, COMDAT
; _this$ = ecx
; Line 380
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 381
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+8]
	mov	ecx, DWORD PTR _v$[ebp]
	fadd	DWORD PTR [ecx+8]
	fstp	DWORD PTR tv144[ebp]
	fld	DWORD PTR tv144[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [edx+4]
	mov	eax, DWORD PTR _v$[ebp]
	fadd	DWORD PTR [eax+4]
	fstp	DWORD PTR tv147[ebp]
	fld	DWORD PTR tv147[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [ecx]
	mov	edx, DWORD PTR _v$[ebp]
	fadd	DWORD PTR [edx]
	fstp	DWORD PTR tv150[ebp]
	fld	DWORD PTR tv150[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0D3DXVECTOR3@@QAE@MMM@Z		; D3DXVECTOR3::D3DXVECTOR3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 382
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z ENDP			; D3DXVECTOR3::operator+
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??GD3DXVECTOR3@@QBE?AU0@ABU0@@Z
_TEXT	SEGMENT
tv150 = -216						; size = 4
tv147 = -212						; size = 4
tv144 = -208						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
??GD3DXVECTOR3@@QBE?AU0@ABU0@@Z PROC			; D3DXVECTOR3::operator-, COMDAT
; _this$ = ecx
; Line 386
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 387
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+8]
	mov	ecx, DWORD PTR _v$[ebp]
	fsub	DWORD PTR [ecx+8]
	fstp	DWORD PTR tv144[ebp]
	fld	DWORD PTR tv144[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [edx+4]
	mov	eax, DWORD PTR _v$[ebp]
	fsub	DWORD PTR [eax+4]
	fstp	DWORD PTR tv147[ebp]
	fld	DWORD PTR tv147[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [ecx]
	mov	edx, DWORD PTR _v$[ebp]
	fsub	DWORD PTR [edx]
	fstp	DWORD PTR tv150[ebp]
	fld	DWORD PTR tv150[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0D3DXVECTOR3@@QAE@MMM@Z		; D3DXVECTOR3::D3DXVECTOR3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 388
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??GD3DXVECTOR3@@QBE?AU0@ABU0@@Z ENDP			; D3DXVECTOR3::operator-
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??DD3DXVECTOR3@@QBE?AU0@M@Z
_TEXT	SEGMENT
tv132 = -216						; size = 4
tv130 = -212						; size = 4
tv128 = -208						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_f$ = 12						; size = 4
??DD3DXVECTOR3@@QBE?AU0@M@Z PROC			; D3DXVECTOR3::operator*, COMDAT
; _this$ = ecx
; Line 392
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 393
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+8]
	fmul	DWORD PTR _f$[ebp]
	fstp	DWORD PTR tv128[ebp]
	fld	DWORD PTR tv128[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [ecx+4]
	fmul	DWORD PTR _f$[ebp]
	fstp	DWORD PTR tv130[ebp]
	fld	DWORD PTR tv130[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [edx]
	fmul	DWORD PTR _f$[ebp]
	fstp	DWORD PTR tv132[ebp]
	fld	DWORD PTR tv132[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0D3DXVECTOR3@@QAE@MMM@Z		; D3DXVECTOR3::D3DXVECTOR3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 394
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??DD3DXVECTOR3@@QBE?AU0@M@Z ENDP			; D3DXVECTOR3::operator*
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??D@YA?AUD3DXVECTOR3@@MABU0@@Z
_TEXT	SEGMENT
tv132 = -204						; size = 4
tv130 = -200						; size = 4
tv128 = -196						; size = 4
___$ReturnUdt$ = 8					; size = 4
_f$ = 12						; size = 4
_v$ = 16						; size = 4
??D@YA?AUD3DXVECTOR3@@MABU0@@Z PROC			; operator*, COMDAT
; Line 406
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 407
	fld	DWORD PTR _f$[ebp]
	mov	eax, DWORD PTR _v$[ebp]
	fmul	DWORD PTR [eax+8]
	fstp	DWORD PTR tv128[ebp]
	fld	DWORD PTR tv128[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	fld	DWORD PTR _f$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	fmul	DWORD PTR [ecx+4]
	fstp	DWORD PTR tv130[ebp]
	fld	DWORD PTR tv130[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	fld	DWORD PTR _f$[ebp]
	mov	edx, DWORD PTR _v$[ebp]
	fmul	DWORD PTR [edx]
	fstp	DWORD PTR tv132[ebp]
	fld	DWORD PTR tv132[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0D3DXVECTOR3@@QAE@MMM@Z		; D3DXVECTOR3::D3DXVECTOR3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D@YA?AUD3DXVECTOR3@@MABU0@@Z ENDP			; operator*
_TEXT	ENDS
PUBLIC	_sqrtf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?D3DXVec3Length@@YAMPBUD3DXVECTOR3@@@Z
_TEXT	SEGMENT
tv146 = -196						; size = 4
_pV$ = 8						; size = 4
?D3DXVec3Length@@YAMPBUD3DXVECTOR3@@@Z PROC		; D3DXVec3Length, COMDAT
; Line 1710
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1717
	mov	eax, DWORD PTR _pV$[ebp]
	fld	DWORD PTR [eax]
	mov	ecx, DWORD PTR _pV$[ebp]
	fmul	DWORD PTR [ecx]
	mov	edx, DWORD PTR _pV$[ebp]
	fld	DWORD PTR [edx+4]
	mov	eax, DWORD PTR _pV$[ebp]
	fmul	DWORD PTR [eax+4]
	faddp	ST(1), ST(0)
	mov	ecx, DWORD PTR _pV$[ebp]
	fld	DWORD PTR [ecx+8]
	mov	edx, DWORD PTR _pV$[ebp]
	fmul	DWORD PTR [edx+8]
	faddp	ST(1), ST(0)
	fstp	DWORD PTR tv146[ebp]
	fld	DWORD PTR tv146[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	call	_sqrtf
	add	esp, 4
; Line 1721
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?D3DXVec3Length@@YAMPBUD3DXVECTOR3@@@Z ENDP		; D3DXVec3Length
_TEXT	ENDS
EXTRN	_sqrt:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _sqrtf
_TEXT	SEGMENT
tv73 = -196						; size = 4
__X$ = 8						; size = 4
_sqrtf	PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\math.h
; Line 434
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	fld	DWORD PTR __X$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_sqrt
	add	esp, 8
	fstp	DWORD PTR tv73[ebp]
	fld	DWORD PTR tv73[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_sqrtf	ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?D3DXVec3Cross@@YAPAUD3DXVECTOR3@@PAU1@PBU1@1@Z
_TEXT	SEGMENT
_v$ = -20						; size = 12
__$ArrayPad$ = -4					; size = 4
_pOut$ = 8						; size = 4
_pV1$ = 12						; size = 4
_pV2$ = 16						; size = 4
?D3DXVec3Cross@@YAPAUD3DXVECTOR3@@PAU1@PBU1@1@Z PROC	; D3DXVec3Cross, COMDAT
; File c:\program files (x86)\microsoft directx sdk (june 2010)\include\d3dx9math.inl
; Line 1747
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1748
	lea	ecx, DWORD PTR _v$[ebp]
	call	??0D3DXVECTOR3@@QAE@XZ			; D3DXVECTOR3::D3DXVECTOR3
; Line 1755
	mov	eax, DWORD PTR _pV1$[ebp]
	fld	DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _pV2$[ebp]
	fmul	DWORD PTR [ecx+8]
	mov	edx, DWORD PTR _pV1$[ebp]
	fld	DWORD PTR [edx+8]
	mov	eax, DWORD PTR _pV2$[ebp]
	fmul	DWORD PTR [eax+4]
	fsubp	ST(1), ST(0)
	fstp	DWORD PTR _v$[ebp]
; Line 1756
	mov	eax, DWORD PTR _pV1$[ebp]
	fld	DWORD PTR [eax+8]
	mov	ecx, DWORD PTR _pV2$[ebp]
	fmul	DWORD PTR [ecx]
	mov	edx, DWORD PTR _pV1$[ebp]
	fld	DWORD PTR [edx]
	mov	eax, DWORD PTR _pV2$[ebp]
	fmul	DWORD PTR [eax+8]
	fsubp	ST(1), ST(0)
	fstp	DWORD PTR _v$[ebp+4]
; Line 1757
	mov	eax, DWORD PTR _pV1$[ebp]
	fld	DWORD PTR [eax]
	mov	ecx, DWORD PTR _pV2$[ebp]
	fmul	DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _pV1$[ebp]
	fld	DWORD PTR [edx+4]
	mov	eax, DWORD PTR _pV2$[ebp]
	fmul	DWORD PTR [eax]
	fsubp	ST(1), ST(0)
	fstp	DWORD PTR _v$[ebp+8]
; Line 1759
	mov	eax, DWORD PTR _pOut$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _v$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _v$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
; Line 1760
	mov	eax, DWORD PTR _pOut$[ebp]
; Line 1761
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@D3DXVec3Cr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@D3DXVec3Cr:
	DD	1
	DD	$LN4@D3DXVec3Cr
$LN4@D3DXVec3Cr:
	DD	-20					; ffffffecH
	DD	12					; 0000000cH
	DD	$LN3@D3DXVec3Cr
$LN3@D3DXVec3Cr:
	DB	118					; 00000076H
	DB	0
?D3DXVec3Cross@@YAPAUD3DXVECTOR3@@PAU1@PBU1@1@Z ENDP	; D3DXVec3Cross
_TEXT	ENDS
PUBLIC	?ProcessGraphics@GraphicsEngine@@QAEXXZ		; GraphicsEngine::ProcessGraphics
EXTRN	?TestSpin@ObjectBox@@QAEXXZ:PROC		; ObjectBox::TestSpin
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ProcessGraphics@GraphicsEngine@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ProcessGraphics@GraphicsEngine@@QAEXXZ PROC		; GraphicsEngine::ProcessGraphics, COMDAT
; _this$ = ecx
; File c:\users\naoya\documents\visual studio 2010\npca.jp\3dモニター制作\3dmonitor-分岐\3dmonitor\graphics_engine.cpp
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?TestSpin@ObjectBox@@QAEXXZ		; ObjectBox::TestSpin
; Line 122
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Render@GraphicsEngine@@AAEXXZ		; GraphicsEngine::Render
; Line 123
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ProcessGraphics@GraphicsEngine@@QAEXXZ ENDP		; GraphicsEngine::ProcessGraphics
_TEXT	ENDS
END
