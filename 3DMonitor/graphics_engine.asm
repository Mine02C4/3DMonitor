; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Users\naoya\Documents\Visual Studio 2010\npca.jp\3Dモニター制作\3DMonitor-Direct2D\3DMonitor\graphics_engine.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??0CameraParam@@QAE@XZ				; CameraParam::CameraParam
PUBLIC	??0GraphicsEngine@@QAE@PAVDXEngine@@PAJ@Z	; GraphicsEngine::GraphicsEngine
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\users\naoya\documents\visual studio 2010\npca.jp\3dモニター制作\3dmonitor-direct2d\3dmonitor\graphics_engine.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??0GraphicsEngine@@QAE@PAVDXEngine@@PAJ@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_tmp_dx$ = 8						; size = 4
_result$ = 12						; size = 4
??0GraphicsEngine@@QAE@PAVDXEngine@@PAJ@Z PROC		; GraphicsEngine::GraphicsEngine, COMDAT
; _this$ = ecx
; Line 16
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CameraParam@@QAE@XZ			; CameraParam::CameraParam
; Line 17
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _tmp_dx$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 41
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0GraphicsEngine@@QAE@PAVDXEngine@@PAJ@Z ENDP		; GraphicsEngine::GraphicsEngine
_TEXT	ENDS
PUBLIC	??0D3DXVECTOR3@@QAE@XZ				; D3DXVECTOR3::D3DXVECTOR3
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0CameraParam@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0CameraParam@@QAE@XZ PROC				; CameraParam::CameraParam, COMDAT
; _this$ = ecx
; File c:\users\naoya\documents\visual studio 2010\npca.jp\3dモニター制作\3dmonitor-direct2d\3dmonitor\typedefs.h
; Line 32
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0D3DXVECTOR3@@QAE@XZ			; D3DXVECTOR3::D3DXVECTOR3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0D3DXVECTOR3@@QAE@XZ			; D3DXVECTOR3::D3DXVECTOR3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0D3DXVECTOR3@@QAE@XZ			; D3DXVECTOR3::D3DXVECTOR3
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CameraParam@@QAE@XZ ENDP				; CameraParam::CameraParam
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0D3DXVECTOR3@@QAE@XZ PROC				; D3DXVECTOR3::D3DXVECTOR3, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft directx sdk (june 2010)\include\d3dx10math.h
; Line 198
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0D3DXVECTOR3@@QAE@XZ ENDP				; D3DXVECTOR3::D3DXVECTOR3
_TEXT	ENDS
PUBLIC	??1GraphicsEngine@@QAE@XZ			; GraphicsEngine::~GraphicsEngine
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1GraphicsEngine@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1GraphicsEngine@@QAE@XZ PROC				; GraphicsEngine::~GraphicsEngine, COMDAT
; _this$ = ecx
; File c:\users\naoya\documents\visual studio 2010\npca.jp\3dモニター制作\3dmonitor-direct2d\3dmonitor\graphics_engine.cpp
; Line 44
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 47
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1GraphicsEngine@@QAE@XZ ENDP				; GraphicsEngine::~GraphicsEngine
_TEXT	ENDS
PUBLIC	__real@3f800000
PUBLIC	__real@3f19999a
PUBLIC	__real@3e000000
PUBLIC	__real@00000000
PUBLIC	__$ArrayPad$
PUBLIC	?Render@GraphicsEngine@@AAEXXZ			; GraphicsEngine::Render
EXTRN	?frame_counter@@3JA:DWORD			; frame_counter
EXTRN	?ClearRenderTargetView@DXEngine@@QAEXQBM@Z:PROC	; DXEngine::ClearRenderTargetView
EXTRN	?get_d3d_device@DXEngine@@QAEPAUID3D10Device@@XZ:PROC ; DXEngine::get_d3d_device
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f19999a
CONST	SEGMENT
__real@3f19999a DD 03f19999ar			; 0.6
CONST	ENDS
;	COMDAT __real@3e000000
CONST	SEGMENT
__real@3e000000 DD 03e000000r			; 0.125
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?Render@GraphicsEngine@@AAEXXZ
_TEXT	SEGMENT
_color$ = -48						; size = 16
_d3d_device$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?Render@GraphicsEngine@@AAEXXZ PROC			; GraphicsEngine::Render, COMDAT
; _this$ = ecx
; Line 51
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 52
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?get_d3d_device@DXEngine@@QAEPAUID3D10Device@@XZ ; DXEngine::get_d3d_device
	mov	DWORD PTR _d3d_device$[ebp], eax
; Line 53
	fldz
	fstp	DWORD PTR _color$[ebp]
	fld	DWORD PTR __real@3e000000
	fstp	DWORD PTR _color$[ebp+4]
	fld	DWORD PTR __real@3f19999a
	fstp	DWORD PTR _color$[ebp+8]
	fld1
	fstp	DWORD PTR _color$[ebp+12]
; Line 54
	lea	eax, DWORD PTR _color$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?ClearRenderTargetView@DXEngine@@QAEXQBM@Z ; DXEngine::ClearRenderTargetView
; Line 94
	mov	eax, DWORD PTR ?frame_counter@@3JA	; frame_counter
	add	eax, 1
	mov	DWORD PTR ?frame_counter@@3JA, eax	; frame_counter
; Line 95
	cmp	DWORD PTR ?frame_counter@@3JA, 101	; frame_counter, 00000065H
	je	SHORT $LN1@Render
	cmp	DWORD PTR ?frame_counter@@3JA, 1	; frame_counter
	jne	SHORT $LN2@Render
$LN1@Render:
; Line 97
	npad	1
$LN2@Render:
; Line 103
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Render
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@Render:
	DD	1
	DD	$LN6@Render
$LN6@Render:
	DD	-48					; ffffffd0H
	DD	16					; 00000010H
	DD	$LN5@Render
$LN5@Render:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
?Render@GraphicsEngine@@AAEXXZ ENDP			; GraphicsEngine::Render
_TEXT	ENDS
PUBLIC	??YD3DXVECTOR3@@QAEAAU0@ABU0@@Z			; D3DXVECTOR3::operator+=
PUBLIC	??DD3DXVECTOR3@@QBE?AU0@M@Z			; D3DXVECTOR3::operator*
PUBLIC	?D3DXVec3Cross@@YAPAUD3DXVECTOR3@@PAU1@PBU1@1@Z	; D3DXVec3Cross
PUBLIC	??0D3DXVECTOR3@@QAE@MMM@Z			; D3DXVECTOR3::D3DXVECTOR3
PUBLIC	__real@bf800000
PUBLIC	?D3DXVec3Length@@YAMPBUD3DXVECTOR3@@@Z		; D3DXVec3Length
PUBLIC	??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z			; D3DXVECTOR3::operator+
PUBLIC	??D@YA?AUD3DXVECTOR3@@MABU0@@Z			; operator*
PUBLIC	??GD3DXVECTOR3@@QBE?AU0@ABU0@@Z			; D3DXVECTOR3::operator-
PUBLIC	__real@bfc955741fb143fb
PUBLIC	__real@3f8684d8ffba038a
PUBLIC	__real@4032800000000000
PUBLIC	__real@0000000000000000
PUBLIC	__$ArrayPad$
PUBLIC	?GetCameraParamByViewId@GraphicsEngine@@AAEXPBUCameraParam@@HPAU2@@Z ; GraphicsEngine::GetCameraParamByViewId
EXTRN	_D3DXVec3Normalize@8:PROC
EXTRN	_sin:PROC
EXTRN	_cos:PROC
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@bfc955741fb143fb
CONST	SEGMENT
__real@bfc955741fb143fb DQ 0bfc955741fb143fbr	; -0.19792
CONST	ENDS
;	COMDAT __real@3f8684d8ffba038a
CONST	SEGMENT
__real@3f8684d8ffba038a DQ 03f8684d8ffba038ar	; 0.0109956
CONST	ENDS
;	COMDAT __real@4032800000000000
CONST	SEGMENT
__real@4032800000000000 DQ 04032800000000000r	; 18.5
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?GetCameraParamByViewId@GraphicsEngine@@AAEXPBUCameraParam@@HPAU2@@Z
_TEXT	SEGMENT
tv212 = -464						; size = 4
tv184 = -464						; size = 4
tv174 = -464						; size = 4
$T79208 = -456						; size = 48
$T79217 = -400						; size = 12
$T79218 = -380						; size = 12
$T79219 = -360						; size = 12
$T79221 = -340						; size = 12
$T79222 = -320						; size = 12
$T79224 = -300						; size = 12
$T79225 = -280						; size = 12
$T79226 = -260						; size = 12
_tmp_vec$79220 = -48					; size = 12
_difference_view$ = -28					; size = 8
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_main_camera$ = 8					; size = 4
_camera_id$ = 12					; size = 4
_out_camera$ = 16					; size = 4
?GetCameraParamByViewId@GraphicsEngine@@AAEXPBUCameraParam@@HPAU2@@Z PROC ; GraphicsEngine::GetCameraParamByViewId, COMDAT
; _this$ = ecx
; Line 106
	push	ebp
	mov	ebp, esp
	sub	esp, 464				; 000001d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-464]
	mov	ecx, 116				; 00000074H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 107
	mov	esi, DWORD PTR _main_camera$[ebp]
	mov	ecx, 12					; 0000000cH
	lea	edi, DWORD PTR $T79208[ebp]
	rep movsd
	mov	ecx, 12					; 0000000cH
	lea	esi, DWORD PTR $T79208[ebp]
	mov	edi, DWORD PTR _out_camera$[ebp]
	rep movsd
; Line 108
	fldz
	fstp	QWORD PTR _difference_view$[ebp]
; Line 109
	fild	DWORD PTR _camera_id$[ebp]
	fld	QWORD PTR __real@4032800000000000
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN2@GetCameraP
; Line 110
	jmp	$LN3@GetCameraP
; Line 111
	jmp	$LN1@GetCameraP
$LN2@GetCameraP:
; Line 112
	mov	eax, DWORD PTR _camera_id$[ebp]
	sub	eax, 1
	mov	DWORD PTR tv174[ebp], eax
	fild	DWORD PTR tv174[ebp]
	fmul	QWORD PTR __real@3f8684d8ffba038a
	fadd	QWORD PTR __real@bfc955741fb143fb
	fstp	QWORD PTR _difference_view$[ebp]
; Line 113
	mov	eax, DWORD PTR _main_camera$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR $T79217[ebp]
	push	ecx
	mov	ecx, DWORD PTR _main_camera$[ebp]
	call	??GD3DXVECTOR3@@QBE?AU0@ABU0@@Z		; D3DXVECTOR3::operator-
	push	eax
	sub	esp, 8
	fld	QWORD PTR _difference_view$[ebp]
	fstp	QWORD PTR [esp]
	call	_cos
	add	esp, 8
	fstp	DWORD PTR tv184[ebp]
	fld	DWORD PTR tv184[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	lea	edx, DWORD PTR $T79218[ebp]
	push	edx
	call	??D@YA?AUD3DXVECTOR3@@MABU0@@Z		; operator*
	add	esp, 12					; 0000000cH
	push	eax
	lea	eax, DWORD PTR $T79219[ebp]
	push	eax
	mov	ecx, DWORD PTR _main_camera$[ebp]
	add	ecx, 12					; 0000000cH
	call	??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z		; D3DXVECTOR3::operator+
	mov	ecx, DWORD PTR _out_camera$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
; Line 114
	lea	ecx, DWORD PTR _tmp_vec$79220[ebp]
	call	??0D3DXVECTOR3@@QAE@XZ			; D3DXVECTOR3::D3DXVECTOR3
; Line 115
	mov	eax, DWORD PTR _main_camera$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T79225[ebp]
	push	ecx
	mov	ecx, DWORD PTR _main_camera$[ebp]
	add	ecx, 12					; 0000000cH
	call	??GD3DXVECTOR3@@QBE?AU0@ABU0@@Z		; D3DXVECTOR3::operator-
	push	eax
	call	?D3DXVec3Length@@YAMPBUD3DXVECTOR3@@@Z	; D3DXVec3Length
	fstp	DWORD PTR [esp]
	lea	edx, DWORD PTR $T79226[ebp]
	push	edx
	sub	esp, 8
	fld	QWORD PTR _difference_view$[ebp]
	fstp	QWORD PTR [esp]
	call	_sin
	add	esp, 8
	fstp	DWORD PTR tv212[ebp]
	fld	DWORD PTR tv212[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	lea	eax, DWORD PTR $T79224[ebp]
	push	eax
	mov	ecx, DWORD PTR _main_camera$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T79222[ebp]
	push	edx
	mov	ecx, DWORD PTR _main_camera$[ebp]
	add	ecx, 12					; 0000000cH
	call	??GD3DXVECTOR3@@QBE?AU0@ABU0@@Z		; D3DXVECTOR3::operator-
	push	eax
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@bf800000
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T79221[ebp]
	call	??0D3DXVECTOR3@@QAE@MMM@Z		; D3DXVECTOR3::D3DXVECTOR3
	push	eax
	lea	eax, DWORD PTR _tmp_vec$79220[ebp]
	push	eax
	call	?D3DXVec3Cross@@YAPAUD3DXVECTOR3@@PAU1@PBU1@1@Z ; D3DXVec3Cross
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _tmp_vec$79220[ebp]
	push	ecx
	call	_D3DXVec3Normalize@8
	mov	ecx, eax
	call	??DD3DXVECTOR3@@QBE?AU0@M@Z		; D3DXVECTOR3::operator*
	mov	ecx, eax
	call	??DD3DXVECTOR3@@QBE?AU0@M@Z		; D3DXVECTOR3::operator*
	push	eax
	mov	ecx, DWORD PTR _out_camera$[ebp]
	call	??YD3DXVECTOR3@@QAEAAU0@ABU0@@Z		; D3DXVECTOR3::operator+=
$LN1@GetCameraP:
$LN3@GetCameraP:
; Line 117
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@GetCameraP
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 464				; 000001d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN7@GetCameraP:
	DD	1
	DD	$LN6@GetCameraP
$LN6@GetCameraP:
	DD	-48					; ffffffd0H
	DD	12					; 0000000cH
	DD	$LN5@GetCameraP
$LN5@GetCameraP:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	95					; 0000005fH
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
?GetCameraParamByViewId@GraphicsEngine@@AAEXPBUCameraParam@@HPAU2@@Z ENDP ; GraphicsEngine::GetCameraParamByViewId
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@MMM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
_fz$ = 16						; size = 4
??0D3DXVECTOR3@@QAE@MMM@Z PROC				; D3DXVECTOR3::D3DXVECTOR3, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft directx sdk (june 2010)\include\d3dx10math.inl
; Line 320
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 321
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _fx$[ebp]
	fstp	DWORD PTR [eax]
; Line 322
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _fy$[ebp]
	fstp	DWORD PTR [eax+4]
; Line 323
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _fz$[ebp]
	fstp	DWORD PTR [eax+8]
; Line 324
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0D3DXVECTOR3@@QAE@MMM@Z ENDP				; D3DXVECTOR3::D3DXVECTOR3
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??YD3DXVECTOR3@@QAEAAU0@ABU0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_v$ = 8							; size = 4
??YD3DXVECTOR3@@QAEAAU0@ABU0@@Z PROC			; D3DXVECTOR3::operator+=, COMDAT
; _this$ = ecx
; Line 344
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 345
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax]
	mov	ecx, DWORD PTR _v$[ebp]
	fadd	DWORD PTR [ecx]
	mov	edx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [edx]
; Line 346
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _v$[ebp]
	fadd	DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [edx+4]
; Line 347
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+8]
	mov	ecx, DWORD PTR _v$[ebp]
	fadd	DWORD PTR [ecx+8]
	mov	edx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [edx+8]
; Line 348
	mov	eax, DWORD PTR _this$[ebp]
; Line 349
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??YD3DXVECTOR3@@QAEAAU0@ABU0@@Z ENDP			; D3DXVECTOR3::operator+=
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z
_TEXT	SEGMENT
tv150 = -216						; size = 4
tv147 = -212						; size = 4
tv144 = -208						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z PROC			; D3DXVECTOR3::operator+, COMDAT
; _this$ = ecx
; Line 397
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 398
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+8]
	mov	ecx, DWORD PTR _v$[ebp]
	fadd	DWORD PTR [ecx+8]
	fstp	DWORD PTR tv144[ebp]
	fld	DWORD PTR tv144[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [edx+4]
	mov	eax, DWORD PTR _v$[ebp]
	fadd	DWORD PTR [eax+4]
	fstp	DWORD PTR tv147[ebp]
	fld	DWORD PTR tv147[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [ecx]
	mov	edx, DWORD PTR _v$[ebp]
	fadd	DWORD PTR [edx]
	fstp	DWORD PTR tv150[ebp]
	fld	DWORD PTR tv150[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0D3DXVECTOR3@@QAE@MMM@Z		; D3DXVECTOR3::D3DXVECTOR3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 399
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z ENDP			; D3DXVECTOR3::operator+
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??GD3DXVECTOR3@@QBE?AU0@ABU0@@Z
_TEXT	SEGMENT
tv150 = -216						; size = 4
tv147 = -212						; size = 4
tv144 = -208						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
??GD3DXVECTOR3@@QBE?AU0@ABU0@@Z PROC			; D3DXVECTOR3::operator-, COMDAT
; _this$ = ecx
; Line 403
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 404
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+8]
	mov	ecx, DWORD PTR _v$[ebp]
	fsub	DWORD PTR [ecx+8]
	fstp	DWORD PTR tv144[ebp]
	fld	DWORD PTR tv144[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [edx+4]
	mov	eax, DWORD PTR _v$[ebp]
	fsub	DWORD PTR [eax+4]
	fstp	DWORD PTR tv147[ebp]
	fld	DWORD PTR tv147[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [ecx]
	mov	edx, DWORD PTR _v$[ebp]
	fsub	DWORD PTR [edx]
	fstp	DWORD PTR tv150[ebp]
	fld	DWORD PTR tv150[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0D3DXVECTOR3@@QAE@MMM@Z		; D3DXVECTOR3::D3DXVECTOR3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 405
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??GD3DXVECTOR3@@QBE?AU0@ABU0@@Z ENDP			; D3DXVECTOR3::operator-
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??DD3DXVECTOR3@@QBE?AU0@M@Z
_TEXT	SEGMENT
tv132 = -216						; size = 4
tv130 = -212						; size = 4
tv128 = -208						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_f$ = 12						; size = 4
??DD3DXVECTOR3@@QBE?AU0@M@Z PROC			; D3DXVECTOR3::operator*, COMDAT
; _this$ = ecx
; Line 409
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 410
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+8]
	fmul	DWORD PTR _f$[ebp]
	fstp	DWORD PTR tv128[ebp]
	fld	DWORD PTR tv128[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [ecx+4]
	fmul	DWORD PTR _f$[ebp]
	fstp	DWORD PTR tv130[ebp]
	fld	DWORD PTR tv130[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [edx]
	fmul	DWORD PTR _f$[ebp]
	fstp	DWORD PTR tv132[ebp]
	fld	DWORD PTR tv132[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0D3DXVECTOR3@@QAE@MMM@Z		; D3DXVECTOR3::D3DXVECTOR3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 411
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??DD3DXVECTOR3@@QBE?AU0@M@Z ENDP			; D3DXVECTOR3::operator*
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??D@YA?AUD3DXVECTOR3@@MABU0@@Z
_TEXT	SEGMENT
tv132 = -204						; size = 4
tv130 = -200						; size = 4
tv128 = -196						; size = 4
___$ReturnUdt$ = 8					; size = 4
_f$ = 12						; size = 4
_v$ = 16						; size = 4
??D@YA?AUD3DXVECTOR3@@MABU0@@Z PROC			; operator*, COMDAT
; Line 423
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 424
	fld	DWORD PTR _f$[ebp]
	mov	eax, DWORD PTR _v$[ebp]
	fmul	DWORD PTR [eax+8]
	fstp	DWORD PTR tv128[ebp]
	fld	DWORD PTR tv128[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	fld	DWORD PTR _f$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	fmul	DWORD PTR [ecx+4]
	fstp	DWORD PTR tv130[ebp]
	fld	DWORD PTR tv130[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	fld	DWORD PTR _f$[ebp]
	mov	edx, DWORD PTR _v$[ebp]
	fmul	DWORD PTR [edx]
	fstp	DWORD PTR tv132[ebp]
	fld	DWORD PTR tv132[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0D3DXVECTOR3@@QAE@MMM@Z		; D3DXVECTOR3::D3DXVECTOR3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 425
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D@YA?AUD3DXVECTOR3@@MABU0@@Z ENDP			; operator*
_TEXT	ENDS
PUBLIC	_sqrtf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?D3DXVec3Length@@YAMPBUD3DXVECTOR3@@@Z
_TEXT	SEGMENT
tv146 = -196						; size = 4
_pV$ = 8						; size = 4
?D3DXVec3Length@@YAMPBUD3DXVECTOR3@@@Z PROC		; D3DXVec3Length, COMDAT
; Line 1687
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1694
	mov	eax, DWORD PTR _pV$[ebp]
	fld	DWORD PTR [eax]
	mov	ecx, DWORD PTR _pV$[ebp]
	fmul	DWORD PTR [ecx]
	mov	edx, DWORD PTR _pV$[ebp]
	fld	DWORD PTR [edx+4]
	mov	eax, DWORD PTR _pV$[ebp]
	fmul	DWORD PTR [eax+4]
	faddp	ST(1), ST(0)
	mov	ecx, DWORD PTR _pV$[ebp]
	fld	DWORD PTR [ecx+8]
	mov	edx, DWORD PTR _pV$[ebp]
	fmul	DWORD PTR [edx+8]
	faddp	ST(1), ST(0)
	fstp	DWORD PTR tv146[ebp]
	fld	DWORD PTR tv146[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	call	_sqrtf
	add	esp, 4
; Line 1698
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?D3DXVec3Length@@YAMPBUD3DXVECTOR3@@@Z ENDP		; D3DXVec3Length
_TEXT	ENDS
EXTRN	_sqrt:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _sqrtf
_TEXT	SEGMENT
tv73 = -196						; size = 4
__X$ = 8						; size = 4
_sqrtf	PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\math.h
; Line 434
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	fld	DWORD PTR __X$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_sqrt
	add	esp, 8
	fstp	DWORD PTR tv73[ebp]
	fld	DWORD PTR tv73[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_sqrtf	ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?D3DXVec3Cross@@YAPAUD3DXVECTOR3@@PAU1@PBU1@1@Z
_TEXT	SEGMENT
_v$ = -20						; size = 12
__$ArrayPad$ = -4					; size = 4
_pOut$ = 8						; size = 4
_pV1$ = 12						; size = 4
_pV2$ = 16						; size = 4
?D3DXVec3Cross@@YAPAUD3DXVECTOR3@@PAU1@PBU1@1@Z PROC	; D3DXVec3Cross, COMDAT
; File c:\program files (x86)\microsoft directx sdk (june 2010)\include\d3dx10math.inl
; Line 1724
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1725
	lea	ecx, DWORD PTR _v$[ebp]
	call	??0D3DXVECTOR3@@QAE@XZ			; D3DXVECTOR3::D3DXVECTOR3
; Line 1732
	mov	eax, DWORD PTR _pV1$[ebp]
	fld	DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _pV2$[ebp]
	fmul	DWORD PTR [ecx+8]
	mov	edx, DWORD PTR _pV1$[ebp]
	fld	DWORD PTR [edx+8]
	mov	eax, DWORD PTR _pV2$[ebp]
	fmul	DWORD PTR [eax+4]
	fsubp	ST(1), ST(0)
	fstp	DWORD PTR _v$[ebp]
; Line 1733
	mov	eax, DWORD PTR _pV1$[ebp]
	fld	DWORD PTR [eax+8]
	mov	ecx, DWORD PTR _pV2$[ebp]
	fmul	DWORD PTR [ecx]
	mov	edx, DWORD PTR _pV1$[ebp]
	fld	DWORD PTR [edx]
	mov	eax, DWORD PTR _pV2$[ebp]
	fmul	DWORD PTR [eax+8]
	fsubp	ST(1), ST(0)
	fstp	DWORD PTR _v$[ebp+4]
; Line 1734
	mov	eax, DWORD PTR _pV1$[ebp]
	fld	DWORD PTR [eax]
	mov	ecx, DWORD PTR _pV2$[ebp]
	fmul	DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _pV1$[ebp]
	fld	DWORD PTR [edx+4]
	mov	eax, DWORD PTR _pV2$[ebp]
	fmul	DWORD PTR [eax]
	fsubp	ST(1), ST(0)
	fstp	DWORD PTR _v$[ebp+8]
; Line 1736
	mov	eax, DWORD PTR _pOut$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _v$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _v$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
; Line 1737
	mov	eax, DWORD PTR _pOut$[ebp]
; Line 1738
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@D3DXVec3Cr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@D3DXVec3Cr:
	DD	1
	DD	$LN4@D3DXVec3Cr
$LN4@D3DXVec3Cr:
	DD	-20					; ffffffecH
	DD	12					; 0000000cH
	DD	$LN3@D3DXVec3Cr
$LN3@D3DXVec3Cr:
	DB	118					; 00000076H
	DB	0
?D3DXVec3Cross@@YAPAUD3DXVECTOR3@@PAU1@PBU1@1@Z ENDP	; D3DXVec3Cross
_TEXT	ENDS
PUBLIC	?ProcessGraphics@GraphicsEngine@@QAEXXZ		; GraphicsEngine::ProcessGraphics
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ProcessGraphics@GraphicsEngine@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ProcessGraphics@GraphicsEngine@@QAEXXZ PROC		; GraphicsEngine::ProcessGraphics, COMDAT
; _this$ = ecx
; File c:\users\naoya\documents\visual studio 2010\npca.jp\3dモニター制作\3dmonitor-direct2d\3dmonitor\graphics_engine.cpp
; Line 120
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 123
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Render@GraphicsEngine@@AAEXXZ		; GraphicsEngine::Render
; Line 124
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ProcessGraphics@GraphicsEngine@@QAEXXZ ENDP		; GraphicsEngine::ProcessGraphics
_TEXT	ENDS
END
