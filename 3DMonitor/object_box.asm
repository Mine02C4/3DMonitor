; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Users\naoya\Documents\Visual Studio 2010\npca.jp\3Dモニター制作\3DMonitor-分岐\3DMonitor\object_box.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	__real@3f800000
PUBLIC	??0DirectionYPR@@QAE@MMM@Z			; DirectionYPR::DirectionYPR
PUBLIC	??0D3DXVECTOR3@@QAE@MMM@Z			; D3DXVECTOR3::D3DXVECTOR3
PUBLIC	__real@00000000
PUBLIC	??0DirectionYPR@@QAE@XZ				; DirectionYPR::DirectionYPR
PUBLIC	??0D3DXVECTOR3@@QAE@XZ				; D3DXVECTOR3::D3DXVECTOR3
PUBLIC	__$ArrayPad$
PUBLIC	??0ObjectBox@@QAE@PAVModelData@@@Z		; ObjectBox::ObjectBox
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT __real@3f800000
; File c:\users\naoya\documents\visual studio 2010\npca.jp\3dモニター制作\3dmonitor-分岐\3dmonitor\object_box.cpp
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??0ObjectBox@@QAE@PAVModelData@@@Z
_TEXT	SEGMENT
$T80003 = -244						; size = 12
$T80186 = -224						; size = 12
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_model$ = 8						; size = 4
??0ObjectBox@@QAE@PAVModelData@@@Z PROC			; ObjectBox::ObjectBox, COMDAT
; _this$ = ecx
; Line 11
	push	ebp
	mov	ebp, esp
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0D3DXVECTOR3@@QAE@XZ			; D3DXVECTOR3::D3DXVECTOR3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0DirectionYPR@@QAE@XZ			; DirectionYPR::DirectionYPR
; Line 12
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _model$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 13
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T80003[ebp]
	call	??0D3DXVECTOR3@@QAE@MMM@Z		; D3DXVECTOR3::D3DXVECTOR3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
; Line 14
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T80186[ebp]
	call	??0DirectionYPR@@QAE@MMM@Z		; DirectionYPR::DirectionYPR
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
; Line 15
	mov	eax, DWORD PTR _this$[ebp]
	fld1
	fstp	DWORD PTR [eax+28]
; Line 16
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0ObjectBox@@QAE@PAVModelData@@@Z ENDP			; ObjectBox::ObjectBox
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0D3DXVECTOR3@@QAE@XZ PROC				; D3DXVECTOR3::D3DXVECTOR3, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft directx sdk (june 2010)\include\d3dx9math.h
; Line 165
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0D3DXVECTOR3@@QAE@XZ ENDP				; D3DXVECTOR3::D3DXVECTOR3
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@MMM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
_fz$ = 16						; size = 4
??0D3DXVECTOR3@@QAE@MMM@Z PROC				; D3DXVECTOR3::D3DXVECTOR3, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft directx sdk (june 2010)\include\d3dx9math.inl
; Line 303
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 304
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _fx$[ebp]
	fstp	DWORD PTR [eax]
; Line 305
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _fy$[ebp]
	fstp	DWORD PTR [eax+4]
; Line 306
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _fz$[ebp]
	fstp	DWORD PTR [eax+8]
; Line 307
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0D3DXVECTOR3@@QAE@MMM@Z ENDP				; D3DXVECTOR3::D3DXVECTOR3
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0DirectionYPR@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0DirectionYPR@@QAE@XZ PROC				; DirectionYPR::DirectionYPR, COMDAT
; _this$ = ecx
; File c:\users\naoya\documents\visual studio 2010\npca.jp\3dモニター制作\3dmonitor-分岐\3dmonitor\dx_engine.h
; Line 44
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [eax]
; Line 46
	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [eax+4]
; Line 47
	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [eax+8]
; Line 48
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0DirectionYPR@@QAE@XZ ENDP				; DirectionYPR::DirectionYPR
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0DirectionYPR@@QAE@MMM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_tYaw$ = 8						; size = 4
_tPitch$ = 12						; size = 4
_tRoll$ = 16						; size = 4
??0DirectionYPR@@QAE@MMM@Z PROC				; DirectionYPR::DirectionYPR, COMDAT
; _this$ = ecx
; Line 49
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 50
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _tYaw$[ebp]
	fstp	DWORD PTR [eax]
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _tPitch$[ebp]
	fstp	DWORD PTR [eax+4]
; Line 52
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _tRoll$[ebp]
	fstp	DWORD PTR [eax+8]
; Line 53
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0DirectionYPR@@QAE@MMM@Z ENDP				; DirectionYPR::DirectionYPR
_TEXT	ENDS
PUBLIC	??0ObjectBox@@QAE@PAVModelData@@UD3DXVECTOR3@@@Z ; ObjectBox::ObjectBox
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ObjectBox@@QAE@PAVModelData@@UD3DXVECTOR3@@@Z
_TEXT	SEGMENT
$T80214 = -232						; size = 12
_this$ = -8						; size = 4
_model$ = 8						; size = 4
_position$ = 12						; size = 12
??0ObjectBox@@QAE@PAVModelData@@UD3DXVECTOR3@@@Z PROC	; ObjectBox::ObjectBox, COMDAT
; _this$ = ecx
; File c:\users\naoya\documents\visual studio 2010\npca.jp\3dモニター制作\3dmonitor-分岐\3dmonitor\object_box.cpp
; Line 17
	push	ebp
	mov	ebp, esp
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0D3DXVECTOR3@@QAE@XZ			; D3DXVECTOR3::D3DXVECTOR3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0DirectionYPR@@QAE@XZ			; DirectionYPR::DirectionYPR
; Line 18
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _model$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 19
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _position$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _position$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
; Line 20
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T80214[ebp]
	call	??0DirectionYPR@@QAE@MMM@Z		; DirectionYPR::DirectionYPR
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
; Line 21
	mov	eax, DWORD PTR _this$[ebp]
	fld1
	fstp	DWORD PTR [eax+28]
; Line 22
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@ObjectBox
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN5@ObjectBox:
	DD	1
	DD	$LN4@ObjectBox
$LN4@ObjectBox:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@ObjectBox
$LN3@ObjectBox:
	DB	95					; 0000005fH
	DB	36					; 00000024H
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	0
??0ObjectBox@@QAE@PAVModelData@@UD3DXVECTOR3@@@Z ENDP	; ObjectBox::ObjectBox
_TEXT	ENDS
PUBLIC	??0ObjectBox@@QAE@PAVModelData@@UD3DXVECTOR3@@UDirectionYPR@@@Z ; ObjectBox::ObjectBox
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ObjectBox@@QAE@PAVModelData@@UD3DXVECTOR3@@UDirectionYPR@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_model$ = 8						; size = 4
_position$ = 12						; size = 12
_direction$ = 24					; size = 12
??0ObjectBox@@QAE@PAVModelData@@UD3DXVECTOR3@@UDirectionYPR@@@Z PROC ; ObjectBox::ObjectBox, COMDAT
; _this$ = ecx
; Line 23
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0D3DXVECTOR3@@QAE@XZ			; D3DXVECTOR3::D3DXVECTOR3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0DirectionYPR@@QAE@XZ			; DirectionYPR::DirectionYPR
; Line 24
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _model$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 25
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _position$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _position$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
; Line 26
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _direction$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _direction$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _direction$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
; Line 27
	mov	eax, DWORD PTR _this$[ebp]
	fld1
	fstp	DWORD PTR [eax+28]
; Line 28
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@ObjectBox@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
$LN5@ObjectBox@2:
	DD	1
	DD	$LN4@ObjectBox@2
$LN4@ObjectBox@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@ObjectBox@2
$LN3@ObjectBox@2:
	DB	95					; 0000005fH
	DB	36					; 00000024H
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	0
??0ObjectBox@@QAE@PAVModelData@@UD3DXVECTOR3@@UDirectionYPR@@@Z ENDP ; ObjectBox::ObjectBox
_TEXT	ENDS
PUBLIC	??1ObjectBox@@QAE@XZ				; ObjectBox::~ObjectBox
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1ObjectBox@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1ObjectBox@@QAE@XZ PROC				; ObjectBox::~ObjectBox, COMDAT
; _this$ = ecx
; Line 32
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 33
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1ObjectBox@@QAE@XZ ENDP				; ObjectBox::~ObjectBox
_TEXT	ENDS
PUBLIC	?Render@ObjectBox@@QAEXPAVDXEngine@@@Z		; ObjectBox::Render
EXTRN	?RenderModel@ModelData@@QAEXPAUIDirect3DDevice9@@@Z:PROC ; ModelData::RenderModel
EXTRN	?get_d3d_device@DXEngine@@QAEPAUIDirect3DDevice9@@XZ:PROC ; DXEngine::get_d3d_device
EXTRN	?SetObjectMatrix@DXEngine@@QAEXUD3DXVECTOR3@@UDirectionYPR@@M@Z:PROC ; DXEngine::SetObjectMatrix
EXTRN	?get_scale_@ModelData@@QAEMXZ:PROC		; ModelData::get_scale_
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Render@ObjectBox@@QAEXPAVDXEngine@@@Z
_TEXT	SEGMENT
tv89 = -208						; size = 4
_this$ = -8						; size = 4
_dx_engine$ = 8						; size = 4
?Render@ObjectBox@@QAEXPAVDXEngine@@@Z PROC		; ObjectBox::Render, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 38
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	call	?get_scale_@ModelData@@QAEMXZ		; ModelData::get_scale_
	mov	ecx, DWORD PTR _this$[ebp]
	fmul	DWORD PTR [ecx+28]
	fstp	DWORD PTR tv89[ebp]
	fld	DWORD PTR tv89[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], ecx
	mov	edx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	ecx, DWORD PTR _dx_engine$[ebp]
	call	?SetObjectMatrix@DXEngine@@QAEXUD3DXVECTOR3@@UDirectionYPR@@M@Z ; DXEngine::SetObjectMatrix
; Line 39
	mov	ecx, DWORD PTR _dx_engine$[ebp]
	call	?get_d3d_device@DXEngine@@QAEPAUIDirect3DDevice9@@XZ ; DXEngine::get_d3d_device
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	call	?RenderModel@ModelData@@QAEXPAUIDirect3DDevice9@@@Z ; ModelData::RenderModel
; Line 40
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Render@ObjectBox@@QAEXPAVDXEngine@@@Z ENDP		; ObjectBox::Render
_TEXT	ENDS
PUBLIC	__real@3faaceea00000000
PUBLIC	?TestSpin@ObjectBox@@QAEXXZ			; ObjectBox::TestSpin
;	COMDAT __real@3faaceea00000000
CONST	SEGMENT
__real@3faaceea00000000 DQ 03faaceea00000000r	; 0.0523599
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?TestSpin@ObjectBox@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?TestSpin@ObjectBox@@QAEXXZ PROC			; ObjectBox::TestSpin, COMDAT
; _this$ = ecx
; Line 44
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+16]
	fadd	QWORD PTR __real@3faaceea00000000
	mov	ecx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [ecx+16]
; Line 46
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?TestSpin@ObjectBox@@QAEXXZ ENDP			; ObjectBox::TestSpin
_TEXT	ENDS
END
